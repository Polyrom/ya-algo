"""
Напишите функцию, совершающую просеивание вниз в куче на максимум. Гарантируется, что порядок элементов в куче может
быть нарушен только элементом, от которого запускается просеивание.
Функция принимает в качестве аргументов массив, в котором хранятся элементы кучи, и индекс элемента,
от которого надо сделать просеивание вниз. Функция должна вернуть индекс, на котором элемент оказался после просеивания.
Также необходимо изменить порядок элементов в переданном в функцию массиве.

Индексация в массиве, содержащем кучу, начинается с единицы.
Таким образом, сыновья вершины на позиции v это 2v и 2v + 1.

Обратите внимание, что нулевой элемент в передаваемом массиве фиктивный, вершина кучи соответствует 1-му элементу.
"""


def sift_down(heap, idx) -> int:
    n = len(heap) - 1
    left_idx = 2 * idx
    right_idx = 2 * idx + 1
    largest = idx

    if left_idx <= n and heap[left_idx] > heap[largest]:
        largest = left_idx
    if right_idx <= n and heap[right_idx] > heap[largest]:
        largest = right_idx

    if largest != idx:
        heap[idx], heap[largest] = heap[largest], heap[idx]
        return sift_down(heap, largest)

    return idx


def test():
    sample = [-1, 12, 1, 8, 3, 4, 7]
    assert sift_down(sample, 2) == 5


if __name__ == "__main__":
    test()
